// <auto-generated />
using System;
using Booking_Management.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Booking_Management.Migrations
{
    [DbContext(typeof(BookingContext))]
    partial class BookingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Booking_Management.Models.Package_Booking", b =>
                {
                    b.Property<string>("Booking_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("Booked_On")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Booking_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Booking_Status")
                        .HasColumnType("int");

                    b.Property<int?>("Package_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Traveller_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Travellers_Count")
                        .HasColumnType("int");

                    b.HasKey("Booking_Id");

                    b.ToTable("package_bookings");
                });

            modelBuilder.Entity("Booking_Management.Models.Payment", b =>
                {
                    b.Property<int>("Payment_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Payment_Id"));

                    b.Property<string>("Booking_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CVV")
                        .HasColumnType("int");

                    b.Property<string>("Card_Holder_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Card_Number")
                        .HasColumnType("bigint");

                    b.Property<string>("Expiry_Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Payment_Id");

                    b.HasIndex("Booking_Id");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("Booking_Management.Models.Review", b =>
                {
                    b.Property<int>("Review_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Review_Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Package_Id")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Review_Id");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("Booking_Management.Models.Payment", b =>
                {
                    b.HasOne("Booking_Management.Models.Package_Booking", "package_booking")
                        .WithMany()
                        .HasForeignKey("Booking_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("package_booking");
                });
#pragma warning restore 612, 618
        }
    }
}
